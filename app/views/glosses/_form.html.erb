<%= form_with(model: gloss, class: "contents") do |form| %>
  <% if gloss.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-3 py-2 font-medium rounded-md mt-3">
      <h2><%= pluralize(gloss.errors.count, "error") %> prohibited this gloss from being saved:</h2>

      <ul class="list-disc ml-6">
        <% gloss.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="my-5">
    <%= form.label :text %>
    <%= form.textarea :text, rows: 4, class: ["block shadow-sm rounded-md border px-3 py-2 mt-2 w-full", {"border-gray-400 focus:outline-blue-600": gloss.errors[:text].none?, "border-red-400 focus:outline-red-600": gloss.errors[:text].any?}] %>
  </div>

  <div class="my-5">
    <%= form.label :word_id, "Word", class: "block text-sm font-medium text-gray-700" %>
    <% if defined?(@words) && @words.any? %>
      <%= form.collection_select :word_id, @words, :id, :representation,
          { prompt: "Select a word..." },
          { class: ["block shadow-sm rounded-md border px-3 py-2 mt-2 w-full",
                   {"border-gray-400 focus:outline-blue-600": gloss.errors[:word_id].none?,
                    "border-red-400 focus:outline-red-600": gloss.errors[:word_id].any?}] } %>
    <% else %>
      <p class="mt-2 text-sm text-gray-500">No words available. Create a word first.</p>
      <%= form.hidden_field :word_id %>
    <% end %>
  </div>

  <div class="inline">
    <%= form.submit class: "w-full sm:w-auto rounded-md px-3.5 py-2.5 bg-blue-600 hover:bg-blue-500 text-white inline-block font-medium cursor-pointer" %>
  </div>
<% end %>
